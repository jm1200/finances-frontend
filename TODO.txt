
- Set up testing environment. react-testing-library? https://www.youtube.com/watch?v=is83bEK3n5A
- clean up nav
- redis user?
- category CRUD tests, do something other than toBeDefined()
- Loading spinner from updating transaction category
- look into higher order resolvers for resolves that need userId
- make current month or last transaction month active month
- select category title says Age:
- transactions where name and memo are the same, maybe compare amounts so they can be auto categorized
- over flow: scroll fro tables. set height to screen height.
- maybe check some transactions for name while categorizing: Amazon, Tim Hortens, AMZN, McDonalds...
- maybe make save category true the default.
- must refresh to see new category but not subcat in selects

- budgets don't refetch when switched back and forth.
- get budget names for select list
- budget total does not calculate on load.


-bug - click on update. find out why i can't update selected book to 377 hyde....
-might be better to have transactions point at a savedCategoryId instead of separate categories and subCategories
    on init, each transaction could point to the uncategorized savedCategoryId. might be some drawbacks.
    each transactions that is categorized would also have a saved category. What about singleton transactions?


- not enough room for notes in categories table
 - see only uncategorized.. maybe just table sort option?
 -


List of words to check for:
McDonalds
Time hortons
AMZN
Amazon
RCSS
Remark
Burger King
Grill
LCBO
Metro

Material table
- make amounts display dollars


check all useAuth middlewares in server resolvers.

Files to delete?
- transCatDataTable.ts


categories tests:
1. add button opens form
2. cancel button closes form
3. check button adds category and closes form
4. list item component expands list and shrinks
5. arrow button expands lists and shrinks
6. add subcat button appears on expands
7. edit button disappears when add subcat pressed
8. sub cat cancels closes form
9. sub cat check adds subcat
10. add button disappears when edit button pressed
11. delete deletes category
12. cancel closes form
13. check edits category name


to update book or not update book
single transaction: obviously need to be able to update the book. 

should I update the saved category?
apply to all true:
    savedCategoryId true: does the alternative saved category already exist? 
    if so, just change the savedCategoryId on the transaction, if not update the savedCategory
    savedCategoryId false: make a new one with name, memo, book

apply to all false:
//don't want a saved category...
    savedCategoryId true: bad. delete the saved category using the savedCategoryId
    savedCategoryId false: good. don't make a new one


saved category true: Problem: a savedCategory exists but I might be changing 
                     the book value which might invalidate the savedCategory.
                     if(savedCategory.book !== data.selectedBook){
                         Need to swtich categories or create a newone.
                         const existingCategory? SaveCategory.find(name, memo, book)
                         if (exists){
                             can the savedCategory already exist? 
                             {enbridge, enbridge, 377 hyderpark rd} was created, {enbridge, enbridge, home} can both exist at the same time.
                            switch categories
                         } else {
                             can the savedCategory not exist? yes
                             create new one
                         }
                     }else{
                         The book did not change, so we can use the savedCategoryId

                         update the transaction first: book, note, categories...

                         if the categories changed, then we want to update the savedCategory.
                         update the saved category with new categories

                         if the categories changed, then we want to update the transactions the savedCategory applies to.
                         update all transactions with new categories


                     }

               false: easy. create a new saved category with name, memo, book


transactionEntity         savedCategoryEntity

book                      book