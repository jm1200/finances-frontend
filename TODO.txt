
- Set up testing environment. react-testing-library? https://www.youtube.com/watch?v=is83bEK3n5A
- clean up nav
- redis user?
- category CRUD tests, do something other than toBeDefined()
- Loading spinner from updating transaction category
- look into higher order resolvers for resolves that need userId
- don;t let user delete uncategorized categories
- make current month or last transaction month active month
- select category title says Age:
- transactions where name and memo are the same, maybe compare amounts so they can be auto categorized
- if a note exists don't allow apply to all or checkAmount


- not enough room for notes in categories table
-notes aren't saving.
 - see only uncategorized.. maybe just table sort option?
 -


Material table
- make amounts display dollars

get userid function working for resolvers.

check all useAuth middlewares in server resolvers.

Files to delete?
- transCatDataTable.ts


categories tests:
1. add button opens form
2. cancel button closes form
3. check button adds category and closes form
4. list item component expands list and shrinks
5. arrow button expands lists and shrinks
6. add subcat button appears on expands
7. edit button disappears when add subcat pressed
8. sub cat cancels closes form
9. sub cat check adds subcat
10. add button disappears when edit button pressed
11. delete deletes category
12. cancel closes form
13. check edits category name



add property to entity:
1. add property to entity


in the table I have a switch to decide which mutations to run

add savedCategory to Trans Entity

if saved category {
    update all categories
    if saved category has changed {
        update savedCategories Entity with change
    }
} else {
    update one category
    if saved category has changed {
        update savedCategories Entity with change
    } 
}

When I import a transaction I check for name, memo and note. if they match a saved
category I then add the appropriate category. The problem is that name, memo and note could
match, but I want them to be different categories. I can't compare amounts too because:
1.) the amounts may change slightly from month to month or year to year.
2.) some saved categories, like McD's, the amounts could vary largely.

I could add another check for saved categories that are recurring. need to check in update all categories, and
file upload.


if amount is clicked, I want to compare amounts aswell
if amount is not clicked, just comparing name/memo/note is enough

checkAmount true
    savedCateogry true
        applyToAll true
             EXPECT-->
                1. SavedCategory Update
                    name: data.name,
                    memo: data.memo,
                    categoryId: data.categoryId,
                    subCategoryId: data.subCategoryId,
                    amount: data.amount,
                2. applyToAll: transactions[] --> PASS
                3. savedCategory: made a new category --> PASS

        applyToAll false

    savedCategory false
        applyToAll true

        applyToAll false

checkAmount false
    savedCateogry true
        applyToAll true

        applyToAll false

    savedCategory false
        applyToAll true 
            EXPECT-->
                1. amount: null --> PASS
                2. applyToAll: transactions[] --> PASS
                3. savedCategory: made a new category --> PASS


               
        applyToAll false
